📦 Behavior_Analysis_With_CCTV_Cameras (Python-based Modular AI System)

├── فاز ۰: تحلیل و طراحی
│   ├── تعریف اهداف کلی پروژه و محدودیت منابع (CPU-only)
│   ├── مشخص‌کردن دسته‌بندی رفتاری مشتریان (buyer, browser, thief)
│   ├── طراحی ویژگی‌های قابل استخراج مستقل از چیدمان فروشگاه
│   └── طراحی معماری ماژولار، LLM-integrated و reward-based
│
├── فاز ۱: آموزش ماژول Enneagram
│   ├── تعریف ۹ تیپ شخصیتی قابل استنتاج از رفتار
│   ├── تولید یا برچسب‌گذاری دیتا برای این تیپ‌ها از ویدیوها
│   └── آموزش مدل رفتارمحور برای پیش‌بینی Enneagram
│
├── فاز ۲: آموزش ماژول MBTI
│   ├── تعریف ۴ بُعد شخصیتی و ۱۶ تیپ نهایی
│   ├── نگاشت رفتارهای فیزیکی به بعدهای MBTI
│   └── آموزش مدل تشخیص MBTI از روی ویژگی‌های استخراجی
│
├── فاز ۳: آموزش ماژول زبان بدن (Body Language)
│   ├── تعریف نشانه‌های فیزیکی قابل تشخیص (استرس، تردید، نگاه، تماس چشمی، ...)
│   ├── استفاده از ویدیوهای ضبط‌شده برای نمونه‌سازی رفتارها
│   └── آموزش مدل lightweight تشخیص زبان بدن (بدون نیاز به keypoint detection سنگین)
│
├── فاز ۴: آموزش ماژول تشخیص کالا
│   ├── استفاده از تصاویر پس‌زمینه سفید کالاها برای ساخت دیتاست custom
│   ├── آموزش YOLOv8n یا YOLOv5-Tiny روی CPU با دسته‌بندی‌های داخلی فروشگاه
│   └── استفاده از این مدل برای شناسایی کالا در ویدیوهای فروشگاه (object presence)
│
├── فاز ۵: تولید دیتاست ساختگی (ویدیوهای آموزشی ساختگی)
│   ├── طراحی سناریوهای دزدی، رفتار مردد، بازدیدکننده، همراه کودک، استفاده از موبایل و ...
│   ├── ضبط ویدیوها با نیروهای فروشگاه
│   ├── برچسب‌گذاری رفتارها (خریدار، دزد، نیاز به کمک، تجربه‌گرا)
│   └── استخراج فریم و ویژگی‌ها برای آموزش و ارزیابی
│
├── فاز ۶: ترکیب ماژول‌ها (Fusion Layer)
│   ├── ترکیب خروجی MBTI + Enneagram + Body Language + Object Context
│   ├── تولید متغیرهای نهایی مثل: suspicion_score، intent_to_buy، confusion_score
│   └── پیش‌بینی نهایی: buyer / browser / thief + personality
│
├── فاز ۷: اتصال به LLM برای توضیح تصمیمات
│   ├── تولید prompt از خروجی مدل‌ها
│   ├── اتصال به LLM محلی یا API مثل Mistral یا OpenAI
│   └── تولید متن انسانی برای خروجی مدل جهت نمایش یا گزارش
│
├── فاز ۸: یادگیری تدریجی با پاداش/خطا (Reward-Based Optimization)
│   ├── مقایسه پیش‌بینی با ground truth واقعی
│   ├── محاسبه پاداش/خطا برای ماژول‌ها
│   ├── اصلاح وزن ماژول‌ها در fusion layer
│   └── ثبت تاریخچه عملکرد مدل برای گزارش و تحلیل
│
└── فاز ۹: آماده‌سازی نسخه عملیاتی فروشگاهی
    ├── تست کامل روی ویدیوهای واقعی فروشگاه
    ├── گزارش‌گیری و تحلیل نهایی
    └── خروجی قابل‌اجرا روی سیستم فروشگاه بدون GPU (با کد بهینه و تنظیمات سبک)
